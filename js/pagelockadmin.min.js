class PageLocksAdmin{async readLocks(){let e;try{const t=new FormData;t.append("readLocks",""),e=await fetch(window.location.pathname,{method:"POST",body:t})}catch(e){return void alert("Unexpected error while accessing the server.")}if(e.ok){const t=await e.json();this.displayLocks(t)}else alert("No valid response from server.")}displayLocks(e){const t=document.getElementById("locklist");t.innerHTML="",Object.keys(e).forEach((o,a)=>{const n=e[o],s=new Date(1e3*n.timestamp),c=document.createElement("tr");c.innerHTML=`\n            <td class="author">${n.fullname}</td>\n            <td class="route">${n.route}</td>\n            <td class="since">${s.toLocaleTimeString()}</td>\n            <td id="row${a}" class="delete"><a><i class="fa fa-close"></i></a></td>\n            `,t.appendChild(c),document.getElementById("row"+a).addEventListener("click",()=>{window.confirm(`Have you confirmed the page is no longer being edited by ${n.fullname}?`)&&this.removeLock(o)})})}async removeLock(e){let t;try{const o=new FormData;o.append("removeLock",e),t=await fetch(window.location.pathname,{method:"POST",body:o})}catch(e){return void alert("Unexpected error while accessing the server.")}t.ok?this.readLocks():alert("No valid response from server.")}}const admin=new PageLocksAdmin;admin.readLocks();