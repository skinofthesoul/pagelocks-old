class PageLocker{constructor(){this.isPageLocked=!1}async acquireLock(){const e=new FormData;let t;e.append("acquireLock",window.location.pathname);try{t=await fetch(window.location.pathname,{method:"POST",body:e})}catch(e){return void alert("Unexpected error while accessing the server.")}if(t.ok){const e=await t.json();e.isOnPage&&(e.isLockGranted?(this.isPageLocked=!0,this.keepAlive(e.keepAliveInterval)):(this.isPageLocked=!1,this.alert(e.alert,"error")))}else alert("No valid response from server.")}keepAlive(e){this.isPageLocked&&setTimeout(async()=>{const t=new FormData;let a;t.append("keepAlive",window.location.pathname);try{a=await fetch(window.location.pathname,{method:"POST",body:t})}catch(e){return void alert("Unexpected error while accessing the server.")}if(a.ok){const t=await a.json();t.isExtended?this.keepAlive(e):this.alert(t.alert,"error")}else alert("No valid response from server.")},e)}alert(e,t){const a=document.createElement("div");a.className=t+" alert pagelocks";const o=document.createTextNode(e);a.appendChild(o);document.getElementById("messages").appendChild(a)}clearAlert(){const e=document.getElementsByClassName("alert pagelocks");for(let t of e){document.getElementById("messages").removeChild(t)}}}const pageLocker=new PageLocker;pageLocker.clearAlert(),pageLocker.acquireLock();